name: Continuous Integration and Deployment to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
  SERVER_PUBLIC_IP: ${{ secrets.AWS_PUBLIC_KEY }}
  AWS_ECR_REGISTRY_ID: ${{ secrets.REGISTRY_ID }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build Docker Image
        run: docker build -t $AWS_ECR_REGISTRY_ID/travelandmeal:${{ github.sha }} .

      - name: Login to AWS ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY_ID

      - name: Tag and Push Docker Image to AWS ECR registry
        run: |
          docker tag $AWS_ECR_REGISTRY_ID/travelandmeal:${{ github.sha }} $AWS_ECR_REGISTRY_ID/travelandmeal:${{ github.sha }}
          docker push $AWS_ECR_REGISTRY_ID/travelandmeal:${{ github.sha }}

  deploy:
    name: Deploy to AWS EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install dependencies
        run: npm install

      - name: Build Docker Image
        run: docker-compose up --build -d

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_PUBLIC_IP }}
          username: ubuntu
          key: ${{ env.PRIVATE_SSH_KEY }}
          script: |
            sudo apt update
            sudo apt install docker.io -y
            sudo docker stop travelandmeal-container || true
            sudo docker rm travelandmeal-container || true
            sudo docker pull $AWS_ECR_REGISTRY_ID/travelandmeal:${{ github.sha }}
            sudo docker run -d --name travelandmeal-container -p 3000:3000 $AWS_ECR_REGISTRY_ID/travelandmeal:${{ github.sha }}
